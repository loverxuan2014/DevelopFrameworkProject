"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.isDefined = exports.isCronner = exports.isHandler = exports.isRemoter = exports.method = exports.notImplement = exports.cronner = exports.handler = exports.remoter = exports.DESIGN_PARAM_TYPES = exports.LoaderPathType = void 0;
var LoaderPathType;
(function (LoaderPathType) {
    LoaderPathType["PINUS_REMOTER"] = "pinus:remoter";
    LoaderPathType["PINUS_HANDLER"] = "pinus:hanlder";
    LoaderPathType["PINUS_CRONNER"] = "pinus:cronner";
})(LoaderPathType = exports.LoaderPathType || (exports.LoaderPathType = {}));
const DUPLICATED_REMOTER_DECORATOR = 'Cannot apply @remoter decorator multiple times.';
const DUPLICATED_HANDLER_DECORATOR = 'Cannot apply @handler decorator multiple times.';
const DUPLICATED_CRONNER_DECORATOR = 'Cannot apply @cronner decorator multiple times.';
// used to access design time types
exports.DESIGN_PARAM_TYPES = 'design:paramtypes';
function remoter() {
    return function (target) {
        if (Reflect.hasOwnMetadata(LoaderPathType.PINUS_REMOTER, target)) {
            throw new Error(DUPLICATED_REMOTER_DECORATOR);
        }
        const types = Reflect.getMetadata(exports.DESIGN_PARAM_TYPES, target) || [];
        Reflect.defineMetadata(LoaderPathType.PINUS_REMOTER, types, target);
        return target;
    };
}
exports.remoter = remoter;
function handler() {
    return function (target) {
        if (Reflect.hasOwnMetadata(LoaderPathType.PINUS_HANDLER, target)) {
            throw new Error(DUPLICATED_HANDLER_DECORATOR);
        }
        const types = Reflect.getMetadata(exports.DESIGN_PARAM_TYPES, target) || [];
        Reflect.defineMetadata(LoaderPathType.PINUS_HANDLER, types, target);
        return target;
    };
}
exports.handler = handler;
function cronner() {
    return function (target) {
        if (Reflect.hasOwnMetadata(LoaderPathType.PINUS_CRONNER, target)) {
            throw new Error(DUPLICATED_CRONNER_DECORATOR);
        }
        const types = Reflect.getMetadata(exports.DESIGN_PARAM_TYPES, target) || [];
        Reflect.defineMetadata(LoaderPathType.PINUS_CRONNER, types, target);
        return target;
    };
}
exports.cronner = cronner;
function notImplement() {
    throw new Error('not implement');
}
exports.notImplement = notImplement;
function method() {
    return function (target, targetKey, index) {
        return {
            configurable: true,
            enumerable: true,
            value: notImplement,
            writable: true
        };
    };
}
exports.method = method;
function isRemoter(ctor) {
    return Reflect.hasMetadata(LoaderPathType.PINUS_REMOTER, ctor);
}
exports.isRemoter = isRemoter;
function isHandler(ctor) {
    return Reflect.hasMetadata(LoaderPathType.PINUS_HANDLER, ctor);
}
exports.isHandler = isHandler;
function isCronner(ctor) {
    return Reflect.hasMetadata(LoaderPathType.PINUS_CRONNER, ctor);
}
exports.isCronner = isCronner;
function isDefined(ctor, pathType) {
    return Reflect.hasMetadata(pathType, ctor);
}
exports.isDefined = isDefined;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGVjb3JhdGVycy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL2xpYi9kZWNvcmF0ZXJzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUNBLElBQVksY0FJWDtBQUpELFdBQVksY0FBYztJQUN0QixpREFBK0IsQ0FBQTtJQUMvQixpREFBK0IsQ0FBQTtJQUMvQixpREFBK0IsQ0FBQTtBQUNuQyxDQUFDLEVBSlcsY0FBYyxHQUFkLHNCQUFjLEtBQWQsc0JBQWMsUUFJekI7QUFFRCxNQUFNLDRCQUE0QixHQUFHLGlEQUFpRCxDQUFDO0FBQ3ZGLE1BQU0sNEJBQTRCLEdBQUcsaURBQWlELENBQUM7QUFDdkYsTUFBTSw0QkFBNEIsR0FBRyxpREFBaUQsQ0FBQztBQUV2RixtQ0FBbUM7QUFDdEIsUUFBQSxrQkFBa0IsR0FBRyxtQkFBbUIsQ0FBQztBQUV0RCxTQUFnQixPQUFPO0lBQ25CLE9BQU8sVUFBVSxNQUFXO1FBRXhCLElBQUksT0FBTyxDQUFDLGNBQWMsQ0FBQyxjQUFjLENBQUMsYUFBYSxFQUFFLE1BQU0sQ0FBQyxFQUFFO1lBQzlELE1BQU0sSUFBSSxLQUFLLENBQUMsNEJBQTRCLENBQUMsQ0FBQztTQUNqRDtRQUVELE1BQU0sS0FBSyxHQUFHLE9BQU8sQ0FBQyxXQUFXLENBQUMsMEJBQWtCLEVBQUUsTUFBTSxDQUFDLElBQUksRUFBRSxDQUFDO1FBQ3BFLE9BQU8sQ0FBQyxjQUFjLENBQUMsY0FBYyxDQUFDLGFBQWEsRUFBRSxLQUFLLEVBQUUsTUFBTSxDQUFDLENBQUM7UUFFcEUsT0FBTyxNQUFNLENBQUM7SUFDbEIsQ0FBQyxDQUFDO0FBQ04sQ0FBQztBQVpELDBCQVlDO0FBQ0QsU0FBZ0IsT0FBTztJQUNuQixPQUFPLFVBQVUsTUFBVztRQUV4QixJQUFJLE9BQU8sQ0FBQyxjQUFjLENBQUMsY0FBYyxDQUFDLGFBQWEsRUFBRSxNQUFNLENBQUMsRUFBRTtZQUM5RCxNQUFNLElBQUksS0FBSyxDQUFDLDRCQUE0QixDQUFDLENBQUM7U0FDakQ7UUFFRCxNQUFNLEtBQUssR0FBRyxPQUFPLENBQUMsV0FBVyxDQUFDLDBCQUFrQixFQUFFLE1BQU0sQ0FBQyxJQUFJLEVBQUUsQ0FBQztRQUNwRSxPQUFPLENBQUMsY0FBYyxDQUFDLGNBQWMsQ0FBQyxhQUFhLEVBQUUsS0FBSyxFQUFFLE1BQU0sQ0FBQyxDQUFDO1FBRXBFLE9BQU8sTUFBTSxDQUFDO0lBQ2xCLENBQUMsQ0FBQztBQUNOLENBQUM7QUFaRCwwQkFZQztBQUNELFNBQWdCLE9BQU87SUFDbkIsT0FBTyxVQUFVLE1BQVc7UUFFeEIsSUFBSSxPQUFPLENBQUMsY0FBYyxDQUFDLGNBQWMsQ0FBQyxhQUFhLEVBQUUsTUFBTSxDQUFDLEVBQUU7WUFDOUQsTUFBTSxJQUFJLEtBQUssQ0FBQyw0QkFBNEIsQ0FBQyxDQUFDO1NBQ2pEO1FBRUQsTUFBTSxLQUFLLEdBQUcsT0FBTyxDQUFDLFdBQVcsQ0FBQywwQkFBa0IsRUFBRSxNQUFNLENBQUMsSUFBSSxFQUFFLENBQUM7UUFDcEUsT0FBTyxDQUFDLGNBQWMsQ0FBQyxjQUFjLENBQUMsYUFBYSxFQUFFLEtBQUssRUFBRSxNQUFNLENBQUMsQ0FBQztRQUVwRSxPQUFPLE1BQU0sQ0FBQztJQUNsQixDQUFDLENBQUM7QUFDTixDQUFDO0FBWkQsMEJBWUM7QUFFRCxTQUFnQixZQUFZO0lBQ3hCLE1BQU0sSUFBSSxLQUFLLENBQUMsZUFBZSxDQUFDLENBQUM7QUFDckMsQ0FBQztBQUZELG9DQUVDO0FBRUQsU0FBZ0IsTUFBTTtJQUNsQixPQUFPLFVBQVUsTUFBVyxFQUFFLFNBQWlCLEVBQUUsS0FBYztRQUMzRCxPQUFPO1lBQ0gsWUFBWSxFQUFFLElBQUk7WUFDbEIsVUFBVSxFQUFFLElBQUk7WUFDaEIsS0FBSyxFQUFFLFlBQVk7WUFDbkIsUUFBUSxFQUFFLElBQUk7U0FDakIsQ0FBQztJQUNOLENBQUMsQ0FBQztBQUNOLENBQUM7QUFURCx3QkFTQztBQUVELFNBQWdCLFNBQVMsQ0FBQyxJQUFjO0lBQ3BDLE9BQU8sT0FBTyxDQUFDLFdBQVcsQ0FBQyxjQUFjLENBQUMsYUFBYSxFQUFFLElBQUksQ0FBQyxDQUFDO0FBQ25FLENBQUM7QUFGRCw4QkFFQztBQUVELFNBQWdCLFNBQVMsQ0FBQyxJQUFjO0lBQ3BDLE9BQU8sT0FBTyxDQUFDLFdBQVcsQ0FBQyxjQUFjLENBQUMsYUFBYSxFQUFFLElBQUksQ0FBQyxDQUFDO0FBQ25FLENBQUM7QUFGRCw4QkFFQztBQUVELFNBQWdCLFNBQVMsQ0FBQyxJQUFjO0lBQ3BDLE9BQU8sT0FBTyxDQUFDLFdBQVcsQ0FBQyxjQUFjLENBQUMsYUFBYSxFQUFFLElBQUksQ0FBQyxDQUFDO0FBQ25FLENBQUM7QUFGRCw4QkFFQztBQUVELFNBQWdCLFNBQVMsQ0FBQyxJQUFjLEVBQUUsUUFBd0I7SUFDOUQsT0FBTyxPQUFPLENBQUMsV0FBVyxDQUFDLFFBQVEsRUFBRSxJQUFJLENBQUMsQ0FBQztBQUMvQyxDQUFDO0FBRkQsOEJBRUMifQ==