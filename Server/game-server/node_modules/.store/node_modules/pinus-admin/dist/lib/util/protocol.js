"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.PRO_FAIL = exports.PRO_OK = exports.PRO_CODE = exports.isRequest = exports.parse = exports.composeCommand = exports.composeResponse = exports.composeRequest = void 0;
function composeRequest(id, moduleId, body) {
    if (id) {
        // request message
        return JSON.stringify({
            reqId: id,
            moduleId: moduleId,
            body: body
        });
    }
    else {
        // notify message
        return {
            moduleId: moduleId,
            body: body
        };
    }
}
exports.composeRequest = composeRequest;
function composeResponse(req, err, res) {
    if (req.reqId) {
        // request only
        return JSON.stringify({
            respId: req.reqId,
            error: cloneError(err),
            body: res
        });
    }
    // invalid message(notify dose not need response)
    return null;
}
exports.composeResponse = composeResponse;
function composeCommand(id, command, moduleId, body) {
    if (id) {
        // command message
        return JSON.stringify({
            reqId: id,
            command: command,
            moduleId: moduleId,
            body: body
        });
    }
    else {
        return JSON.stringify({
            command: command,
            moduleId: moduleId,
            body: body
        });
    }
}
exports.composeCommand = composeCommand;
function parse(msg) {
    if (typeof msg === 'string') {
        return JSON.parse(msg);
    }
    return msg;
}
exports.parse = parse;
function isRequest(msg) {
    return (msg && msg.reqId);
}
exports.isRequest = isRequest;
let cloneError = function (origin) {
    // copy the stack infos for Error instance json result is empty
    if (!(origin instanceof Error)) {
        return origin;
    }
    let res = {
        message: origin.message,
        stack: origin.stack
    };
    return res;
};
var PRO_CODE;
(function (PRO_CODE) {
    PRO_CODE[PRO_CODE["OK"] = 1] = "OK";
    PRO_CODE[PRO_CODE["FAIL"] = -1] = "FAIL";
})(PRO_CODE = exports.PRO_CODE || (exports.PRO_CODE = {}));
exports.PRO_OK = PRO_CODE.OK;
exports.PRO_FAIL = PRO_CODE.FAIL;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJvdG9jb2wuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9saWIvdXRpbC9wcm90b2NvbC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBQSxTQUFnQixjQUFjLENBQUMsRUFBVSxFQUFFLFFBQWdCLEVBQUUsSUFBUztJQUNsRSxJQUFJLEVBQUUsRUFBRTtRQUNKLGtCQUFrQjtRQUNsQixPQUFPLElBQUksQ0FBQyxTQUFTLENBQUM7WUFDbEIsS0FBSyxFQUFFLEVBQUU7WUFDVCxRQUFRLEVBQUUsUUFBUTtZQUNsQixJQUFJLEVBQUUsSUFBSTtTQUNiLENBQUMsQ0FBQztLQUNOO1NBQU07UUFDSCxpQkFBaUI7UUFDakIsT0FBTztZQUNILFFBQVEsRUFBRSxRQUFRO1lBQ2xCLElBQUksRUFBRSxJQUFJO1NBQ2IsQ0FBQztLQUNMO0FBQ0wsQ0FBQztBQWZELHdDQWVDO0FBRUQsU0FBZ0IsZUFBZSxDQUFFLEdBQW9CLEVBQUUsR0FBbUIsRUFBRSxHQUFRO0lBQ2hGLElBQUksR0FBRyxDQUFDLEtBQUssRUFBRTtRQUNYLGVBQWU7UUFDZixPQUFPLElBQUksQ0FBQyxTQUFTLENBQUM7WUFDbEIsTUFBTSxFQUFFLEdBQUcsQ0FBQyxLQUFLO1lBQ2pCLEtBQUssRUFBRSxVQUFVLENBQUMsR0FBRyxDQUFDO1lBQ3RCLElBQUksRUFBRSxHQUFHO1NBQ1osQ0FBQyxDQUFDO0tBQ047SUFDRCxpREFBaUQ7SUFDakQsT0FBTyxJQUFJLENBQUM7QUFDaEIsQ0FBQztBQVhELDBDQVdDO0FBRUQsU0FBZ0IsY0FBYyxDQUFDLEVBQVUsRUFBRSxPQUFlLEVBQUUsUUFBZ0IsRUFBRSxJQUFTO0lBQ25GLElBQUksRUFBRSxFQUFFO1FBQ0osa0JBQWtCO1FBQ2xCLE9BQU8sSUFBSSxDQUFDLFNBQVMsQ0FBQztZQUNsQixLQUFLLEVBQUUsRUFBRTtZQUNULE9BQU8sRUFBRSxPQUFPO1lBQ2hCLFFBQVEsRUFBRSxRQUFRO1lBQ2xCLElBQUksRUFBRSxJQUFJO1NBQ2IsQ0FBQyxDQUFDO0tBQ047U0FBTTtRQUNILE9BQU8sSUFBSSxDQUFDLFNBQVMsQ0FBQztZQUNsQixPQUFPLEVBQUUsT0FBTztZQUNoQixRQUFRLEVBQUUsUUFBUTtZQUNsQixJQUFJLEVBQUUsSUFBSTtTQUNiLENBQUMsQ0FBQztLQUNOO0FBQ0wsQ0FBQztBQWhCRCx3Q0FnQkM7QUFFRCxTQUFnQixLQUFLLENBQUMsR0FBUTtJQUMxQixJQUFJLE9BQU8sR0FBRyxLQUFLLFFBQVEsRUFBRTtRQUN6QixPQUFPLElBQUksQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUM7S0FDMUI7SUFDRCxPQUFPLEdBQUcsQ0FBQztBQUNmLENBQUM7QUFMRCxzQkFLQztBQUVELFNBQWdCLFNBQVMsQ0FBQyxHQUFRO0lBQzlCLE9BQU8sQ0FBQyxHQUFHLElBQUksR0FBRyxDQUFDLEtBQUssQ0FBQyxDQUFDO0FBQzlCLENBQUM7QUFGRCw4QkFFQztBQUVELElBQUksVUFBVSxHQUFHLFVBQVUsTUFBVztJQUNsQywrREFBK0Q7SUFDL0QsSUFBSSxDQUFDLENBQUMsTUFBTSxZQUFZLEtBQUssQ0FBQyxFQUFFO1FBQzVCLE9BQU8sTUFBTSxDQUFDO0tBQ2pCO0lBQ0QsSUFBSSxHQUFHLEdBQUc7UUFDTixPQUFPLEVBQUUsTUFBTSxDQUFDLE9BQU87UUFDdkIsS0FBSyxFQUFFLE1BQU0sQ0FBQyxLQUFLO0tBQ3RCLENBQUM7SUFDRixPQUFPLEdBQUcsQ0FBQztBQUNmLENBQUMsQ0FBQztBQUVGLElBQVksUUFHWDtBQUhELFdBQVksUUFBUTtJQUNoQixtQ0FBTSxDQUFBO0lBQ04sd0NBQVMsQ0FBQTtBQUNiLENBQUMsRUFIVyxRQUFRLEdBQVIsZ0JBQVEsS0FBUixnQkFBUSxRQUduQjtBQUVVLFFBQUEsTUFBTSxHQUFHLFFBQVEsQ0FBQyxFQUFFLENBQUM7QUFDckIsUUFBQSxRQUFRLEdBQUcsUUFBUSxDQUFDLElBQUksQ0FBQyJ9